Empty:
  description: |
    Empty Object
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/Empty"
Name:
  description: |
     Object.
  content:
    application/json:
      schema:
        type: object
        properties:
          email:
            type: string
            example: person_to_invite@bizico.com
LoginSuccess:
  description: Token payload.
  content:
    application/json:
      schema:
        type: object
        properties:
          token:
            type: string
        example:
          token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQG9wdGltaXplci5jb20iLCJpYXQiOjE1MTA5MDY1NTd9.uPr_WWLMu26lEWyxr2XBn2uTyUL3zBywR7AhdPPWLhA
LoginError:
  description: |
    Failed to login.
    Possible error codes:
    - A000 - No  with such email and password.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
JoinError:
  description: |
    Failed to Join.
    Possible error codes:
    - A000 - Incorrect/Bad Invite Token.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
InviteError:
  description: |
    Failed to Join.
    Possible error codes:
    - A001 -  with given email, already exist.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
RestoreError:
  description: |
    Failed to Join.
    Possible error codes:
    - A010 - Incorrect/Bad Invite Token.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
ChangePasswordError:
  description: |
    Failed to Change Password.
    Possible error codes:
    - A000 -  Does Not Exist.
    - A011 - Bad Old Password. 
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
RecoverError:
  description: |
    Failed to Join.
    Possible error codes:
    - A000 - No  with provided email.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
UserGetError:
  description:  |
    Failed to Get User.
    Possible error codes:
    - U000 - User Does Not Exist.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
UserBanError:
  description:  |
    Failed to Ban User.
    Possible error codes:
    - U000 - User Does Not Exist.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
UserUnBanError:
  description:  |
    Failed to Unban User.
    Possible error codes:
    - U000 - User Does Not Exist.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ValidationError"
UsersGetError:
  description:  |
    Failed to Get Users List.
  content:
    application/json:
      schema:  
        "$ref": "#/components/schemas/QueryParseError"  
UserGetSuccess:
  description: User.
  content:
    application/json:
      schema:
          "$ref": "#/components/schemas/User"
UsersGetSuccess:
  description: List of Users.
  content:
    application/json:
      schema:
        type: object
        properties:
          results:
            type: array
            items:
              "$ref": "#/components/schemas/User"
          pagination:
            "$ref": "#/components/schemas/Pagination"
ServerError:
  description: Something went terribly wrong.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/ServerError"
AuthorizationError:
  description: Not authorized.
  content:
    application/json:
      schema:
        "$ref": "#/components/schemas/AuthorizationError"